"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.activateMainTab = exports.ACTIVATION_TIMEOUT = void 0;
exports.ACTIVATION_TIMEOUT = 2000;
const sendActivationMessage = (activationTimeout) => {
    // don't need to worry about tabs for Cy in Cy tests
    if (document.defaultView !== top) {
        return;
    }
    let timeout;
    let onMessage;
    // promise must resolve with a value for chai as promised to test resolution
    return new Promise((resolve, reject) => {
        onMessage = (ev) => {
            if (ev.data.message === 'cypress:extension:main:tab:activated') {
                window.removeEventListener('message', onMessage);
                clearTimeout(timeout);
                resolve();
            }
        };
        window.addEventListener('message', onMessage);
        window.postMessage({ message: 'cypress:extension:activate:main:tab' });
        timeout = setTimeout(() => {
            window.removeEventListener('message', onMessage);
            reject();
        }, activationTimeout);
    });
};
const activateMainTab = async (browser) => {
    // - Only implemented for Chromium right now. Support for Firefox/webkit
    //   could be added later
    // - Electron doesn't have tabs
    // - Focus doesn't matter for headless browsers and old headless Chrome
    //   doesn't run the extension
    const [page] = await browser.pages();
    if (page) {
        return page.evaluate(sendActivationMessage, exports.ACTIVATION_TIMEOUT);
    }
};
exports.activateMainTab = activateMainTab;
